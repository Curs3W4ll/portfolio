---
variables:
  HUSKY: 0

stages:
  - format
  - test
  - deploy

include:
  - component: gitlab.com/dependabot-gitlab/dependabot-standalone/template@3.15.0
    inputs:
      gitlab_access_token: $DEPENDABOT_GITLAB_ACCESS_TOKEN
      github_access_token: $DEPENDABOT_GITHUB_ACCESS_TOKEN
      stage_name: test
    rules:
      - if: $RUN_DEPENDABOT

cache:
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/
    - .nuxt/
    - .npm/

Format code:
  stage: format
  image: node:alpine
  needs: []
  dependencies: []
  interruptible: true
  variables:
    COMMIT_MESSAGE: ":art: Format code"
    PUSH_BRANCH: $CI_COMMIT_BRANCH
  before_script:
    - apk add git
  script:
    - npm ci
    - npm run lint:fix || true
    - npm run format
    - git config user.name "GitLab CI"
    - git config user.email "ci.epitech@gmail.com"
    - git remote add gitlab_origin https://oauth2:$PUSH_GITLAB_ACCESS_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
    - git add .
    - git diff-index --quiet HEAD || git commit -m "$COMMIT_MESSAGE"
    - git push gitlab_origin HEAD:$PUSH_BRANCH
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        PUSH_BRANCH: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME

Lint:
  stage: test
  image: node:alpine
  needs:
    - job: Format code
      optional: true
  dependencies: []
  interruptible: true
  script:
    - npm ci
    - npm run lint
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

Build:
  stage: test
  image: node:alpine
  needs:
    - job: Format code
      optional: true
  dependencies: []
  interruptible: true
  script:
    - npm ci
    - npm run build
  artifacts:
    paths:
      - .output/
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# This job is used to let GitLab merge requests that have no job to be merged
# Fixing a weird behavior of GitLab, not letting you merge when your pipeline contains no job
No job MR validation:
  stage: test
  needs: []
  dependencies: []
  script:
    - echo "Skipping pipeline..."
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

Unit tests:
  stage: test
  image: node:alpine
  needs:
    - job: Format code
      optional: true
  dependencies: []
  script:
    - npm ci
    - npm run test:unit:coverage
  artifacts:
    paths:
      - coverage/
      - junit-report.xml
    reports:
      junit: junit-report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

E2E tests:
  stage: test
  image: node:alpine
  needs:
    - job: Format code
      optional: true
    - job: Build
      artifacts: true
  script:
    - npm ci
    - npm run test:e2e:record
  artifacts:
    expire_in: 1 day
    paths:
      - cypress/videos/
      - cypress/screenshots/
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

pages:
  stage: deploy
  image: node:alpine
  needs:
    - job: Format code
      optional: true
    - job: Lint
      optional: true
    - job: Unit tests
      optional: true
    - job: E2E tests
      optional: true
  dependencies: []
  script:
    - npm ci
    - npm run generate
  artifacts:
    paths:
      - .output/public
  publish: .output/public
  environment:
    name: production
    url: https://hervaud.fr
    deployment_tier: production
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
