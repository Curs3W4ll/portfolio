---
stages:
  - format
  - test
  - deploy

Install:
  stage: .pre
  image: node:alpine
  needs: []
  dependencies: []
  interruptible: true
  script:
    - npm install
  artifacts:
    paths:
      - nodes_modules/
      - .nuxt/
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

Format code:
  stage: format
  image: node:alpine
  needs:
    - job: Install
      artifacts: true
  interruptible: true
  variables:
    COMMIT_MESSAGE: ":art: Format code"
    PUSH_BRANCH: $CI_COMMIT_BRANCH
  before_script:
    - apk add git
  script:
    - npm install
    - npm run format
    - git config user.name "GitLab CI"
    - git config user.email "ci.epitech@gmail.com"
    - git remote add gitlab_origin https://oauth2:$PUSH_GITLAB_ACCESS_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
    - git add .
    - git diff-index --quiet HEAD || git commit -m "$COMMIT_MESSAGE"
    - git push gitlab_origin HEAD:$PUSH_BRANCH
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        PUSH_BRANCH: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME

# This job is used to let GitLab merge requests that have no job to be merged
# Fixing a weird behavior of GitLab, not letting you merge when your pipeline contains no job
No job MR validation:
  stage: test
  needs: []
  dependencies: []
  script:
    - echo "Skipping pipeline..."
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

pages:
  stage: deploy
  image: node:alpine
  needs:
    - job: Install
      artifacts: true
    - job: Format code
      optional: true
  script:
    - npm install
    - npm run generate
  artifacts:
    paths:
      - .output/public
  publish: .output/public
  environment:
    name: production
    url: https://hervaud.fr
    deployment_tier: production
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
